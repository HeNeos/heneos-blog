1:"$Sreact.fragment"
2:I[8173,["953","static/chunks/app/blog/%5Bslug%5D/page-4374ee6693381f28.js"],""]
3:I[5244,[],""]
4:I[3866,[],""]
5:I[6213,[],"OutletBoundary"]
8:I[6213,[],"ViewportBoundary"]
a:I[6213,[],"MetadataBoundary"]
c:I[4835,[],""]
:HL["/heneos-blog/_next/static/css/10c5481d6c776747.css","style"]
:HL["/heneos-blog/_next/static/css/894b41753079a4a0.css","style"]
:HL["/heneos-blog/_next/static/css/5eacd01f773eed7f.css","style"]
0:{"P":null,"b":"BjRlTE3zuMe9CAZiD63G_","p":"/heneos-blog","c":["","blog","2024-08-23-cloud-graphs-algorithms-in-maps"],"i":false,"f":[[["",{"children":["blog",{"children":[["slug","2024-08-23-cloud-graphs-algorithms-in-maps","d"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/heneos-blog/_next/static/css/10c5481d6c776747.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/heneos-blog/_next/static/css/894b41753079a4a0.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":["$","body",null,{"className":"bg-zinc-950 text-zinc-100 min-h-screen","children":[["$","header",null,{"className":"p-6 border-b border-zinc-800","children":["$","div",null,{"className":"max-w-6xl mx-auto","children":[["$","div",null,{"className":"mb-10","children":[["$","h1",null,{"className":"text-4xl font-bold tracking-tighter mb-4 text-center","children":"HeNeos blog"}],["$","p",null,{"className":"text-center text-zinc-500 mb-2","children":"Josue H. @ JP Morgan Chase"}],["$","p",null,{"className":"text-center text-zinc-600","children":"HeNeos"}]]}],["$","div",null,{"className":"flex justify-center space-x-20 mb-4","children":[["$","$L2",null,{"href":"https://github.com/HeNeos","target":"_blank","className":"text-zinc-500 hover:text-accent animated-underline","children":"GitHub"}],["$","$L2",null,{"href":"https://www.linkedin.com/in/heneos","target":"_blank","className":"text-zinc-500 hover:text-accent animated-underline","children":"LinkedIn"}],["$","$L2",null,{"href":"mailto:he.neos@outlook.com","className":"text-zinc-500 hover:text-accent animated-underline","children":"Email"}]]}],["$","div",null,{"className":"flex flex-col sm:flex-row justify-center gap-4 border-t border-zinc-800 pt-4","children":[["$","$L2",null,{"href":"/","children":["$","div",null,{"className":"cursor-pointer hover:bg-gray-200 hover:text-zinc-900 transition-colors px-4 py-2 rounded-md flex items-center justify-between","children":[["$","span",null,{"children":"Home"}],["$","span",null,{"className":"text-zinc-500 ml-6","children":"ha"}]]}]}],["$","$L2",null,{"href":"/blog","children":["$","div",null,{"className":"cursor-pointer hover:bg-gray-200 hover:text-zinc-900 transition-colors px-4 py-2 rounded-md flex items-center justify-between","children":[["$","span",null,{"children":"Blog"}],["$","span",null,{"className":"text-zinc-500 ml-6","children":"hb"}]]}]}],["$","$L2",null,{"href":"/about","children":["$","div",null,{"className":"cursor-pointer hover:bg-gray-200 hover:text-zinc-900 transition-colors px-4 py-2 rounded-md flex items-center justify-between","children":[["$","span",null,{"children":"About"}],["$","span",null,{"className":"text-zinc-500 ml-6","children":"hc"}]]}]}]]}]]}]}],["$","main",null,{"className":"container mx-auto px-4 py-8 max-w-5xl","children":["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"$undefined",[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}],["$","footer",null,{"className":"border-t border-zinc-800 py-6 mt-12","children":["$","div",null,{"className":"container mx-auto px-4 relative h-full","children":["$","div",null,{"className":"grid grid-cols-1 md:grid-cols-2 gap-8","children":[["$","div",null,{"children":[["$","h3",null,{"className":"text-lg font-semibold text-white mb-4","children":"Connect"}],["$","div",null,{"className":"flex space-x-4","children":[["$","a",null,{"href":"https://github.com/HeNeos","target":"_blank","rel":"noopener noreferrer","className":"text-slate-400 hover:text-white transition-colors","children":"GitHub"}],["$","a",null,{"href":"https://x.com/_HeNeos","target":"_blank","rel":"noopener noreferrer","className":"text-slate-400 hover:text-white transition-colors","children":"X"}],["$","a",null,{"href":"https://codeforces.com/profile/HeNeos","target":"_blank","rel":"noopener noreferrer","className":"text-slate-400 hover:text-white transition-colors","children":"Codeforces"}],["$","a",null,{"href":"https://codeforces.com/profile/Ptolemy_314","target":"_blank","rel":"noopener noreferrer","className":"text-slate-400 hover:text-white transition-colors","children":"Codeforces old"}]]}]]}],["$","div",null,{"children":[["$","h4",null,{"className":"text-lg font-semibold text-white mb-4","children":"Project Euler"}],["$","a",null,{"href":"https://projecteuler.net/profile/HeNeos.png","target":"_blank","rel":"noopener noreferrer","children":["$","img",null,{"src":"https://projecteuler.net/profile/HeNeos.png","alt":"Project Euler Profile","className":" h-auto max-h-10 rounded-sm object-contain"}]}]]}]]}]}]}]]}]}]]}],{"children":["blog",["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":[["slug","2024-08-23-cloud-graphs-algorithms-in-maps","d"],["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":[["$","div",null,{"className":"max-w-5xl mx-auto","children":[["$","$L2",null,{"href":"/blog","className":"text-zinc-500 hover:text-blue-400 mb-6 inline-block animated-underline","children":"‚Üê Back to all posts"}],["$","article",null,{"className":"border border-zinc-800 rounded-lg p-4 bg-zinc-900/30","children":[["$","header",null,{"className":"mb-8 border-b border-zinc-800 pb-6","children":[["$","h1",null,{"className":"text-3xl font-bold mb-4 gradient-text","children":"Graphs Algorithms in Maps"}],["$","p",null,{"className":"text-zinc-500 mb-4 font-mono","children":"August 23, 2024"}],["$","div",null,{"className":"flex gap-2 flex-wrap","children":[["$","span","cloud",{"className":"inline-block bg-zinc-800 text-zinc-300 px-2 py-1 text-xs rounded-sm","children":["#","cloud"]}],["$","span","graphs",{"className":"inline-block bg-zinc-800 text-zinc-300 px-2 py-1 text-xs rounded-sm","children":["#","graphs"]}],["$","span","algorithms",{"className":"inline-block bg-zinc-800 text-zinc-300 px-2 py-1 text-xs rounded-sm","children":["#","algorithms"]}]]}]]}],["$","div",null,{"className":"gap-4 mt-8","children":["$","div",null,{"className":"prose prose-invert prose-zinc max-w-none","children":[["$","p","p-0",{"className":"text-sm text-zinc-300 my-4 leading-relaxed","children":"I've been postponing the post for this fun small project for many weeks. Don't blame me, I've still been working on more project euler problems and studying for the AWS Data Engineer Certification."}],"\n",["$","p","p-1",{"className":"text-sm text-zinc-300 my-4 leading-relaxed","children":"Anyway, it's better late than never."}],"\n",["$","p","p-2",{"className":"text-sm text-zinc-300 my-4 leading-relaxed","children":["Just to give a small introduction about what this post is about: I've seen that it is possible to use ",["$","code","code-0",{"className":"bg-zinc-900 text-blue-600 px-1 py-0.5 rounded-sm text-xs","children":"NetworkX"}]," python library to get the graph representation of a real map using ",["$","code","code-1",{"className":"bg-zinc-900 text-blue-600 px-1 py-0.5 rounded-sm text-xs","children":"OpenStreetMaps"}],", it's not only a graph connection with nodes and edges, it also includes some road metadata that ",["$","em","em-0",{"children":"could be used as a weight"}]," for edges, ",["$","del","del-0",{"children":"at this point, you probably know where I'm pointing to"}],"."]}],"\n",["$","p","p-3",{"className":"text-sm text-zinc-300 my-4 leading-relaxed","children":["So, think a bit about ",["$","strong","strong-0",{"children":"maps"}],", what can you do with them?"]}],"\n",["$","ol","ol-0",{"className":"text-xs list-decimal pl-6 my-4 text-zinc-300 space-y-2","children":["\n",["$","li","li-0",{"className":"text-zinc-300","children":["Find if there is a ",["$","em","em-0",{"children":"path"}]," between two positions ",["$","code","code-0",{"className":"bg-zinc-900 text-blue-600 px-1 py-0.5 rounded-sm text-xs","children":"A"}]," and ",["$","code","code-1",{"className":"bg-zinc-900 text-blue-600 px-1 py-0.5 rounded-sm text-xs","children":"B"}],"."]}],"\n",["$","li","li-1",{"className":"text-zinc-300","children":["If there is a ",["$","em","em-0",{"children":"path"}]," between ",["$","code","code-0",{"className":"bg-zinc-900 text-blue-600 px-1 py-0.5 rounded-sm text-xs","children":"A"}]," and ",["$","code","code-1",{"className":"bg-zinc-900 text-blue-600 px-1 py-0.5 rounded-sm text-xs","children":"B"}],", which one is the ",["$","em","em-1",{"children":"shortest"}],"?"]}],"\n",["$","li","li-2",{"className":"text-zinc-300","children":["If there is a ",["$","em","em-0",{"children":"path"}]," between ",["$","code","code-0",{"className":"bg-zinc-900 text-blue-600 px-1 py-0.5 rounded-sm text-xs","children":"A"}]," and ",["$","code","code-1",{"className":"bg-zinc-900 text-blue-600 px-1 py-0.5 rounded-sm text-xs","children":"B"}],", which one is the ",["$","em","em-1",{"children":"fastest"}],"?"]}],"\n"]}],"\n",["$","p","p-4",{"className":"text-sm text-zinc-300 my-4 leading-relaxed","children":"and there are a lot of more questions that you can have and can be answered with a map, some easier than others."}],"\n",["$","p","p-5",{"className":"text-sm text-zinc-300 my-4 leading-relaxed","children":"However, at this point let's focus only on the third one, which in some sense also involves the number 1 and 2."}],"\n",["$","p","p-6",{"className":"text-sm text-zinc-300 my-4 leading-relaxed","children":["So, the obvious question here is, ",["$","strong","strong-0",{"children":"how?"}],". Unless, you've never taken a class on algorithms, you already know the famous ",["$","code","code-0",{"className":"bg-zinc-900 text-blue-600 px-1 py-0.5 rounded-sm text-xs","children":"Dijkstra algorithm"}],", which is used to find the shortest path in a graph ",["$","del","del-0",{"children":"with some limitations"}],"."]}],"\n",["$","p","p-7",{"className":"text-sm text-zinc-300 my-4 leading-relaxed","children":"I'm not going to explain how Dijkstra's algorithm works because it's really easy to find info about it on internet, instead I'm going to focus on how to build the application."}],"\n",["$","h2","h2-0",{"className":"text-xl font-bold mt-8 mb-4 text-zinc-100 border-b border-zinc-800 pb-2","children":"Getting the position"}],"\n",["$","p","p-8",{"className":"text-sm text-zinc-300 my-4 leading-relaxed","children":"At the beginning, I deployed this project using latitude and longitude, however it's really impractical as it's easier for humans to know the street name instead of those pairs of values."}],"\n",["$","p","p-9",{"className":"text-sm text-zinc-300 my-4 leading-relaxed","children":["First step is to translate street or locations to latitude, langitude values. It could be a difficult task because it implies ",["$","code","code-0",{"className":"bg-zinc-900 text-blue-600 px-1 py-0.5 rounded-sm text-xs","children":"NLP"}]," algorithms, however ",["$","code","code-1",{"className":"bg-zinc-900 text-blue-600 px-1 py-0.5 rounded-sm text-xs","children":"OpenStreetMap"}]," allows us to use its API to find it without further troubles."]}],"\n",["$","pre","pre-0",{"className":"rounded-sm p-4 overflow-auto bg-zinc-900 text-zinc-100 my-4 border border-zinc-800","children":["$","code","code-0",{"className":"hljs language-py text-xs","children":[["$","span","span-0",{"className":"hljs-keyword","children":"def"}]," ",["$","span","span-1",{"className":"hljs-title function_","children":"get_lat_lon"}],"(",["$","span","span-2",{"className":"hljs-params","children":["address: ",["$","span","span-0",{"className":"hljs-built_in","children":"str"}]]}],") -> ",["$","span","span-3",{"className":"hljs-type","children":"Optional"}],"[Coordinates]:\n    url = ",["$","span","span-4",{"className":"hljs-string","children":"\"https://nominatim.openstreetmap.org/search\""}],"\n    params: ",["$","span","span-5",{"className":"hljs-type","children":"Dict"}],"[",["$","span","span-6",{"className":"hljs-built_in","children":"str"}],", ",["$","span","span-7",{"className":"hljs-built_in","children":"str"}]," | ",["$","span","span-8",{"className":"hljs-built_in","children":"int"}],"] = {",["$","span","span-9",{"className":"hljs-string","children":"\"q\""}],": address, ",["$","span","span-10",{"className":"hljs-string","children":"\"format\""}],": ",["$","span","span-11",{"className":"hljs-string","children":"\"json\""}],", ",["$","span","span-12",{"className":"hljs-string","children":"\"limit\""}],": ",["$","span","span-13",{"className":"hljs-number","children":"1"}],"}\n    response = requests.get(url, params=params, headers=HEADERS)\n    ",["$","span","span-14",{"className":"hljs-keyword","children":"if"}]," response.status_code == ",["$","span","span-15",{"className":"hljs-number","children":"200"}]," ",["$","span","span-16",{"className":"hljs-keyword","children":"and"}]," response.json():\n        location = response.json()[",["$","span","span-17",{"className":"hljs-number","children":"0"}],"]\n        ",["$","span","span-18",{"className":"hljs-keyword","children":"return"}]," Coordinates(\n            latitude=",["$","span","span-19",{"className":"hljs-built_in","children":"float"}],"(location[",["$","span","span-20",{"className":"hljs-string","children":"\"lat\""}],"]), longitude=",["$","span","span-21",{"className":"hljs-built_in","children":"float"}],"(location[",["$","span","span-22",{"className":"hljs-string","children":"\"lon\""}],"])\n        )\n    ",["$","span","span-23",{"className":"hljs-keyword","children":"return"}]," ",["$","span","span-24",{"className":"hljs-literal","children":"None"}],"\n"]}]}],"\n",["$","h3","h3-0",{"className":"text-lg font-bold mt-6 mb-3 text-zinc-100","children":"Validating positions"}],"\n",["$","p","p-10",{"className":"text-sm text-zinc-300 my-4 leading-relaxed","children":["The biggest issue for this application is ",["$","code","code-0",{"className":"bg-zinc-900 text-blue-600 px-1 py-0.5 rounded-sm text-xs","children":"downloading"}]," and ",["$","code","code-1",{"className":"bg-zinc-900 text-blue-600 px-1 py-0.5 rounded-sm text-xs","children":"plotting"}]," the maps, the problem is that if you want to find the shortest path between Paris and Berlin, then you have to download a map containing both and that is really big/heavy. So, for now we will also limit it to locations in the same city."]}],"\n",["$","p","p-11",{"className":"text-sm text-zinc-300 my-4 leading-relaxed","children":["If we know the latitude and longitude for the ",["$","code","code-0",{"className":"bg-zinc-900 text-blue-600 px-1 py-0.5 rounded-sm text-xs","children":"source"}]," and ",["$","code","code-1",{"className":"bg-zinc-900 text-blue-600 px-1 py-0.5 rounded-sm text-xs","children":"destination"}],", then we have to check if both are in the same country and city:"]}],"\n",["$","pre","pre-1",{"className":"rounded-sm p-4 overflow-auto bg-zinc-900 text-zinc-100 my-4 border border-zinc-800","children":["$","code","code-0",{"className":"hljs language-py text-xs","children":[["$","span","span-0",{"className":"hljs-keyword","children":"def"}]," ",["$","span","span-1",{"className":"hljs-title function_","children":"get_current_location"}],"(",["$","span","span-2",{"className":"hljs-params","children":"\n    coordinates: Coordinates,\n"}],") -> ",["$","span","span-3",{"className":"hljs-type","children":"Tuple"}],"[",["$","span","span-4",{"className":"hljs-type","children":"Optional"}],"[",["$","span","span-5",{"className":"hljs-built_in","children":"str"}],"], ",["$","span","span-6",{"className":"hljs-type","children":"Optional"}],"[",["$","span","span-7",{"className":"hljs-built_in","children":"str"}],"]]:\n    latitude, longitude = (\n        ",["$","span","span-8",{"className":"hljs-built_in","children":"round"}],"(coordinates.latitude, ",["$","span","span-9",{"className":"hljs-number","children":"6"}],"),\n        ",["$","span","span-10",{"className":"hljs-built_in","children":"round"}],"(coordinates.longitude, ",["$","span","span-11",{"className":"hljs-number","children":"6"}],"),\n    )\n    url = ",["$","span","span-12",{"className":"hljs-string","children":["f\"https://nominatim.openstreetmap.org/reverse?format=json&lat=",["$","span","span-0",{"className":"hljs-subst","children":"{latitude}"}],"&lon=",["$","span","span-1",{"className":"hljs-subst","children":"{longitude}"}],"\""]}],"\n    response = requests.get(url, headers=HEADERS)\n    data: ",["$","span","span-13",{"className":"hljs-type","children":"Dict"}],"[",["$","span","span-14",{"className":"hljs-built_in","children":"str"}],", ",["$","span","span-15",{"className":"hljs-type","children":"Dict"}],"[",["$","span","span-16",{"className":"hljs-built_in","children":"str"}],", ",["$","span","span-17",{"className":"hljs-built_in","children":"str"}],"]] = response.json()\n    ",["$","span","span-18",{"className":"hljs-keyword","children":"if"}]," ",["$","span","span-19",{"className":"hljs-string","children":"\"address\""}]," ",["$","span","span-20",{"className":"hljs-keyword","children":"not"}]," ",["$","span","span-21",{"className":"hljs-keyword","children":"in"}]," data:\n        ",["$","span","span-22",{"className":"hljs-keyword","children":"return"}]," (",["$","span","span-23",{"className":"hljs-literal","children":"None"}],", ",["$","span","span-24",{"className":"hljs-literal","children":"None"}],")\n    address = data[",["$","span","span-25",{"className":"hljs-string","children":"\"address\""}],"]\n    city: ",["$","span","span-26",{"className":"hljs-type","children":"Optional"}],"[",["$","span","span-27",{"className":"hljs-built_in","children":"str"}],"] = address.get(",["$","span","span-28",{"className":"hljs-string","children":"\"city\""}],", ",["$","span","span-29",{"className":"hljs-literal","children":"None"}],")\n    country: ",["$","span","span-30",{"className":"hljs-type","children":"Optional"}],"[",["$","span","span-31",{"className":"hljs-built_in","children":"str"}],"] = address.get(",["$","span","span-32",{"className":"hljs-string","children":"\"country\""}],", ",["$","span","span-33",{"className":"hljs-literal","children":"None"}],")\n    ",["$","span","span-34",{"className":"hljs-keyword","children":"return"}]," (city, country)\n\n"]}]}],"\n",["$","h3","h3-1",{"className":"text-lg font-bold mt-6 mb-3 text-zinc-100","children":"Getting node id"}],"\n",["$","p","p-12",{"className":"text-sm text-zinc-300 my-4 leading-relaxed","children":["So far, we still work with positions and ",["$","code","code-0",{"className":"bg-zinc-900 text-blue-600 px-1 py-0.5 rounded-sm text-xs","children":"latitude"}]," and ",["$","code","code-1",{"className":"bg-zinc-900 text-blue-600 px-1 py-0.5 rounded-sm text-xs","children":"longitude"}],", however in ",["$","code","code-2",{"className":"bg-zinc-900 text-blue-600 px-1 py-0.5 rounded-sm text-xs","children":"graphs"}],", we prefer to work with ",["$","strong","strong-0",{"children":"nodes"}]," and ",["$","strong","strong-1",{"children":"edges"}],". Think for a moment, do we really need to know what is the latitude and longitude of each position? Isn't it enough to have ",["$","code","code-3",{"className":"bg-zinc-900 text-blue-600 px-1 py-0.5 rounded-sm text-xs","children":"nodes"}]," represented by some ",["$","code","code-4",{"className":"bg-zinc-900 text-blue-600 px-1 py-0.5 rounded-sm text-xs","children":"id"}]," and ",["$","code","code-5",{"className":"bg-zinc-900 text-blue-600 px-1 py-0.5 rounded-sm text-xs","children":"edges"}]," connecting those ",["$","code","code-6",{"className":"bg-zinc-900 text-blue-600 px-1 py-0.5 rounded-sm text-xs","children":"nodes"}]," and having some ",["$","code","code-7",{"className":"bg-zinc-900 text-blue-600 px-1 py-0.5 rounded-sm text-xs","children":"length"}],"?"]}],"\n",["$","p","p-13",{"className":"text-sm text-zinc-300 my-4 leading-relaxed","children":["We don't have to worry about geographic positions, but can abstract themo to an ",["$","code","code-0",{"className":"bg-zinc-900 text-blue-600 px-1 py-0.5 rounded-sm text-xs","children":"id"}],". ",["$","code","code-1",{"className":"bg-zinc-900 text-blue-600 px-1 py-0.5 rounded-sm text-xs","children":"NetworkX"}]," allows us to download a graph knowing the city and country, which we already have from the previous step. This ",["$","code","code-2",{"className":"bg-zinc-900 text-blue-600 px-1 py-0.5 rounded-sm text-xs","children":"graph"}]," has ",["$","code","code-3",{"className":"bg-zinc-900 text-blue-600 px-1 py-0.5 rounded-sm text-xs","children":"nodes"}]," and ",["$","code","code-4",{"className":"bg-zinc-900 text-blue-600 px-1 py-0.5 rounded-sm text-xs","children":"edges"}],", so our task is to map the position for source and destination to a valid ",["$","code","code-5",{"className":"bg-zinc-900 text-blue-600 px-1 py-0.5 rounded-sm text-xs","children":"id"}]," in the graph."]}],"\n",["$","pre","pre-2",{"className":"rounded-sm p-4 overflow-auto bg-zinc-900 text-zinc-100 my-4 border border-zinc-800","children":["$","code","code-0",{"className":"hljs language-py text-xs","children":[["$","span","span-0",{"className":"hljs-keyword","children":"def"}]," ",["$","span","span-1",{"className":"hljs-title function_","children":"get_node_id"}],"(",["$","span","span-2",{"className":"hljs-params","children":["graph: ",["$","span","span-0",{"className":"hljs-type","children":"Union"}],"[MultiDiGraph, NGraph], location: Coordinates"]}],") -> NodeId:\n    ",["$","span","span-3",{"className":"hljs-keyword","children":"return"}]," cast(NodeId, ox.nearest_nodes(graph, location.longitude, location.latitude))\n\nG = download_graph(country, city)\ngraph: Graph = generate_graph(G)\nsource = get_node_id(G, source_coordinates)\ndestination = get_node_id(G, destination_coordinates)\n"]}]}],"\n",["$","p","p-14",{"className":"text-sm text-zinc-300 my-4 leading-relaxed","children":["there are faster ways to calculate it, like ",["$","em","em-0",{"children":"caching"}]," the map and storing some data for the map in ",["$","em","em-1",{"children":"dynamo"}],", but it will be explained later."]}],"\n",["$","h2","h2-1",{"className":"text-xl font-bold mt-8 mb-4 text-zinc-100 border-b border-zinc-800 pb-2","children":"Graph algorithms"}],"\n",["$","p","p-15",{"className":"text-sm text-zinc-300 my-4 leading-relaxed","children":["This is by far the most interesting section, here we don't have to think in maps, instead in the abstract representation: ",["$","code","code-0",{"className":"bg-zinc-900 text-blue-600 px-1 py-0.5 rounded-sm text-xs","children":"graph"}],"."]}],"\n",["$","p","p-16",{"className":"text-sm text-zinc-300 my-4 leading-relaxed","children":["If you remember the introduction, our goal is to find the ",["$","strong","strong-0",{"children":"fastest"}]," path, not the ",["$","strong","strong-1",{"children":"shortest"}]," path, both terms can be misunderstood as they are commonly attributed to the same thing, but in the fastest path we want to minimize the ",["$","strong","strong-2",{"children":"time"}],", and in the shortest path the goal is to minimize the ",["$","strong","strong-3",{"children":"length"}],"."]}],"\n",["$","p","p-17",{"className":"text-sm text-zinc-300 my-4 leading-relaxed","children":"Of course, both quantities are related, if you remember your physics classes or follow your intuition you can get:"}],"\n",["$","span","span-0",{"className":"katex-display","children":["$","span","span-0",{"className":"katex","children":[["$","span","span-0",{"className":"katex-mathml","children":["$","math","math-0",{"xmlns":"http://www.w3.org/1998/Math/MathML","display":"block","children":["$","semantics","semantics-0",{"children":[["$","mrow","mrow-0",{"children":[["$","mi","mi-0",{"mathvariant":"normal","children":"Œî"}],["$","mi","mi-1",{"children":"t"}],["$","mo","mo-0",{"children":"="}],["$","mfrac","mfrac-0",{"children":[["$","mrow","mrow-0",{"children":[["$","mi","mi-0",{"mathvariant":"normal","children":"Œî"}],["$","mrow","mrow-0",{"children":[["$","mi","mi-0",{"mathvariant":"normal","children":"l"}],["$","mi","mi-1",{"mathvariant":"normal","children":"e"}],["$","mi","mi-2",{"mathvariant":"normal","children":"n"}],["$","mi","mi-3",{"mathvariant":"normal","children":"g"}],["$","mi","mi-4",{"mathvariant":"normal","children":"t"}],["$","mi","mi-5",{"mathvariant":"normal","children":"h"}]]}]]}],["$","mrow","mrow-1",{"children":[["$","mi","mi-0",{"mathvariant":"normal","children":"s"}],["$","mi","mi-1",{"mathvariant":"normal","children":"p"}],["$","mi","mi-2",{"mathvariant":"normal","children":"e"}],["$","mi","mi-3",{"mathvariant":"normal","children":"e"}],["$","mi","mi-4",{"mathvariant":"normal","children":"d"}]]}]]}]]}],["$","annotation","annotation-0",{"encoding":"application/x-tex","children":"\\Delta t = \\frac{\\Delta \\mathrm{length}}{\\mathrm{speed}}"}]]}]}]}],["$","span","span-1",{"className":"katex-html","aria-hidden":"true","children":[["$","span","span-0",{"className":"base","children":[["$","span","span-0",{"className":"strut","style":{"height":"0.6833em"}}],["$","span","span-1",{"className":"mord","children":"Œî"}],["$","span","span-2",{"className":"mord mathnormal","children":"t"}],["$","span","span-3",{"className":"mspace","style":{"marginRight":"0.2778em"}}],["$","span","span-4",{"className":"mrel","children":"="}],["$","span","span-5",{"className":"mspace","style":{"marginRight":"0.2778em"}}]]}],["$","span","span-1",{"className":"base","children":[["$","span","span-0",{"className":"strut","style":{"height":"2.2519em","verticalAlign":"-0.8804em"}}],["$","span","span-1",{"className":"mord","children":[["$","span","span-0",{"className":"mopen nulldelimiter"}],["$","span","span-1",{"className":"mfrac","children":["$","span","span-0",{"className":"vlist-t vlist-t2","children":[["$","span","span-0",{"className":"vlist-r","children":[["$","span","span-0",{"className":"vlist","style":{"height":"1.3714em"},"children":[["$","span","span-0",{"style":{"top":"-2.314em"},"children":[["$","span","span-0",{"className":"pstrut","style":{"height":"3em"}}],["$","span","span-1",{"className":"mord","children":["$","span","span-0",{"className":"mord","children":["$","span","span-0",{"className":"mord mathrm","children":"speed"}]}]}]]}],["$","span","span-1",{"style":{"top":"-3.23em"},"children":[["$","span","span-0",{"className":"pstrut","style":{"height":"3em"}}],["$","span","span-1",{"className":"frac-line","style":{"borderBottomWidth":"0.04em"}}]]}],["$","span","span-2",{"style":{"top":"-3.677em"},"children":[["$","span","span-0",{"className":"pstrut","style":{"height":"3em"}}],["$","span","span-1",{"className":"mord","children":[["$","span","span-0",{"className":"mord","children":"Œî"}],["$","span","span-1",{"className":"mord","children":["$","span","span-0",{"className":"mord mathrm","children":"length"}]}]]}]]}]]}],["$","span","span-1",{"className":"vlist-s","children":"‚Äã"}]]}],["$","span","span-1",{"className":"vlist-r","children":["$","span","span-0",{"className":"vlist","style":{"height":"0.8804em"},"children":["$","span","span-0",{}]}]}]]}]}],["$","span","span-2",{"className":"mclose nulldelimiter"}]]}]]}]]}]]}]}],"\n",["$","p","p-18",{"className":"text-sm text-zinc-300 my-4 leading-relaxed","children":["However, this is only true if the ",["$","code","code-0",{"className":"bg-zinc-900 text-blue-600 px-1 py-0.5 rounded-sm text-xs","children":"speed"}]," is constant and equal on all edges, which of course is something we can't guarantee, there are some roads with speed limit and then we have a constraint for each edge, to refine this idea, consider a discrete approach:"]}],"\n",["$","span","span-1",{"className":"katex-display","children":["$","span","span-0",{"className":"katex","children":[["$","span","span-0",{"className":"katex-mathml","children":["$","math","math-0",{"xmlns":"http://www.w3.org/1998/Math/MathML","display":"block","children":["$","semantics","semantics-0",{"children":[["$","mrow","mrow-0",{"children":[["$","mi","mi-0",{"mathvariant":"normal","children":"Œî"}],["$","mi","mi-1",{"children":"t"}],["$","mo","mo-0",{"children":"="}],["$","munder","munder-0",{"children":[["$","mo","mo-0",{"children":"‚àë"}],["$","mi","mi-0",{"children":"i"}]]}],["$","mfrac","mfrac-0",{"children":[["$","mrow","mrow-0",{"children":[["$","mi","mi-0",{"mathvariant":"normal","children":"Œî"}],["$","mtext","mtext-0",{"children":"lengt"}],["$","msub","msub-0",{"children":[["$","mi","mi-0",{"children":"h"}],["$","mi","mi-1",{"children":"i"}]]}]]}],["$","msub","msub-0",{"children":[["$","mtext","mtext-0",{"children":"speed"}],["$","mi","mi-0",{"children":"i"}]]}]]}]]}],["$","annotation","annotation-0",{"encoding":"application/x-tex","children":"\\Delta t = \\sum_{i} \\frac{\\Delta \\text{lengt}h_{i}}{\\text{speed}_{i}}"}]]}]}]}],["$","span","span-1",{"className":"katex-html","aria-hidden":"true","children":[["$","span","span-0",{"className":"base","children":[["$","span","span-0",{"className":"strut","style":{"height":"0.6833em"}}],["$","span","span-1",{"className":"mord","children":"Œî"}],["$","span","span-2",{"className":"mord mathnormal","children":"t"}],["$","span","span-3",{"className":"mspace","style":{"marginRight":"0.2778em"}}],["$","span","span-4",{"className":"mrel","children":"="}],["$","span","span-5",{"className":"mspace","style":{"marginRight":"0.2778em"}}]]}],["$","span","span-1",{"className":"base","children":[["$","span","span-0",{"className":"strut","style":{"height":"2.6491em","verticalAlign":"-1.2777em"}}],["$","span","span-1",{"className":"mop op-limits","children":["$","span","span-0",{"className":"vlist-t vlist-t2","children":[["$","span","span-0",{"className":"vlist-r","children":[["$","span","span-0",{"className":"vlist","style":{"height":"1.05em"},"children":[["$","span","span-0",{"style":{"top":"-1.8723em","marginLeft":"0em"},"children":[["$","span","span-0",{"className":"pstrut","style":{"height":"3.05em"}}],["$","span","span-1",{"className":"sizing reset-size6 size3 mtight","children":["$","span","span-0",{"className":"mord mtight","children":["$","span","span-0",{"className":"mord mathnormal mtight","children":"i"}]}]}]]}],["$","span","span-1",{"style":{"top":"-3.05em"},"children":[["$","span","span-0",{"className":"pstrut","style":{"height":"3.05em"}}],["$","span","span-1",{"children":["$","span","span-0",{"className":"mop op-symbol large-op","children":"‚àë"}]}]]}]]}],["$","span","span-1",{"className":"vlist-s","children":"‚Äã"}]]}],["$","span","span-1",{"className":"vlist-r","children":["$","span","span-0",{"className":"vlist","style":{"height":"1.2777em"},"children":["$","span","span-0",{}]}]}]]}]}],["$","span","span-2",{"className":"mspace","style":{"marginRight":"0.1667em"}}],["$","span","span-3",{"className":"mord","children":[["$","span","span-0",{"className":"mopen nulldelimiter"}],["$","span","span-1",{"className":"mfrac","children":["$","span","span-0",{"className":"vlist-t vlist-t2","children":[["$","span","span-0",{"className":"vlist-r","children":[["$","span","span-0",{"className":"vlist","style":{"height":"1.3714em"},"children":[["$","span","span-0",{"style":{"top":"-2.314em"},"children":[["$","span","span-0",{"className":"pstrut","style":{"height":"3em"}}],["$","span","span-1",{"className":"mord","children":["$","span","span-0",{"className":"mord","children":[["$","span","span-0",{"className":"mord text","children":["$","span","span-0",{"className":"mord","children":"speed"}]}],["$","span","span-1",{"className":"msupsub","children":["$","span","span-0",{"className":"vlist-t vlist-t2","children":[["$","span","span-0",{"className":"vlist-r","children":[["$","span","span-0",{"className":"vlist","style":{"height":"0.2175em"},"children":["$","span","span-0",{"style":{"top":"-2.4559em","marginRight":"0.05em"},"children":[["$","span","span-0",{"className":"pstrut","style":{"height":"2.7em"}}],["$","span","span-1",{"className":"sizing reset-size6 size3 mtight","children":["$","span","span-0",{"className":"mord mtight","children":["$","span","span-0",{"className":"mord mathnormal mtight","children":"i"}]}]}]]}]}],["$","span","span-1",{"className":"vlist-s","children":"‚Äã"}]]}],["$","span","span-1",{"className":"vlist-r","children":["$","span","span-0",{"className":"vlist","style":{"height":"0.2441em"},"children":["$","span","span-0",{}]}]}]]}]}]]}]}]]}],["$","span","span-1",{"style":{"top":"-3.23em"},"children":[["$","span","span-0",{"className":"pstrut","style":{"height":"3em"}}],["$","span","span-1",{"className":"frac-line","style":{"borderBottomWidth":"0.04em"}}]]}],["$","span","span-2",{"style":{"top":"-3.677em"},"children":[["$","span","span-0",{"className":"pstrut","style":{"height":"3em"}}],["$","span","span-1",{"className":"mord","children":[["$","span","span-0",{"className":"mord","children":"Œî"}],["$","span","span-1",{"className":"mord text","children":["$","span","span-0",{"className":"mord","children":"lengt"}]}],["$","span","span-2",{"className":"mord","children":[["$","span","span-0",{"className":"mord mathnormal","children":"h"}],["$","span","span-1",{"className":"msupsub","children":["$","span","span-0",{"className":"vlist-t vlist-t2","children":[["$","span","span-0",{"className":"vlist-r","children":[["$","span","span-0",{"className":"vlist","style":{"height":"0.3117em"},"children":["$","span","span-0",{"style":{"top":"-2.55em","marginLeft":"0em","marginRight":"0.05em"},"children":[["$","span","span-0",{"className":"pstrut","style":{"height":"2.7em"}}],["$","span","span-1",{"className":"sizing reset-size6 size3 mtight","children":["$","span","span-0",{"className":"mord mtight","children":["$","span","span-0",{"className":"mord mathnormal mtight","children":"i"}]}]}]]}]}],["$","span","span-1",{"className":"vlist-s","children":"‚Äã"}]]}],["$","span","span-1",{"className":"vlist-r","children":["$","span","span-0",{"className":"vlist","style":{"height":"0.15em"},"children":["$","span","span-0",{}]}]}]]}]}]]}]]}]]}]]}],["$","span","span-1",{"className":"vlist-s","children":"‚Äã"}]]}],["$","span","span-1",{"className":"vlist-r","children":["$","span","span-0",{"className":"vlist","style":{"height":"0.9301em"},"children":["$","span","span-0",{}]}]}]]}]}],["$","span","span-2",{"className":"mclose nulldelimiter"}]]}]]}]]}]]}]}],"\n",["$","p","p-19",{"className":"text-sm text-zinc-300 my-4 leading-relaxed","children":["where ",["$","code","code-0",{"className":"bg-zinc-900 text-blue-600 px-1 py-0.5 rounded-sm text-xs","children":"length[i]"}]," is the length of ",["$","code","code-1",{"className":"bg-zinc-900 text-blue-600 px-1 py-0.5 rounded-sm text-xs","children":"edge[i]"}]," and ",["$","code","code-2",{"className":"bg-zinc-900 text-blue-600 px-1 py-0.5 rounded-sm text-xs","children":"speed[i]"}]," its maximum allowed speed."]}],"\n",["$","p","p-20",{"className":"text-sm text-zinc-300 my-4 leading-relaxed","children":["It's the only modification we have to do, and the data for the maximum allowed speed is provided by ",["$","code","code-0",{"className":"bg-zinc-900 text-blue-600 px-1 py-0.5 rounded-sm text-xs","children":"OpenStreetMaps"}],"."]}],"\n",["$","p","p-21",{"className":"text-sm text-zinc-300 my-4 leading-relaxed","children":["If you remember correctly, Dijkstra is an algorithm to find the shortest path between a source to all the other nodes in the graph, which is not the case for the application, it will work, but there are ",["$","em","em-0",{"children":"better"}]," ways."]}],"\n",["$","h3","h3-2",{"className":"text-lg font-bold mt-6 mb-3 text-zinc-100","children":"A* algorithm"}],"\n",["$","p","p-22",{"className":"text-sm text-zinc-300 my-4 leading-relaxed","children":"A* is a heuristic algorithm, which uses the fact that given two nodes, if we can approximate and find a lower bound for the distance between them, then it's possible to have a better idea about which is the next best node, this will reduce the number of iterations drastically."}],"\n",["$","p","p-23",{"className":"text-sm text-zinc-300 my-4 leading-relaxed","children":"If you remember well, each node represents a position on a real map, this means that it has a latitude and longitude, then the eulerian distance between these two nodes is:"}],"\n",["$","span","span-2",{"className":"katex-display","children":["$","span","span-0",{"className":"katex","children":[["$","span","span-0",{"className":"katex-mathml","children":["$","math","math-0",{"xmlns":"http://www.w3.org/1998/Math/MathML","display":"block","children":["$","semantics","semantics-0",{"children":[["$","mrow","mrow-0",{"children":[["$","mi","mi-0",{"children":"d"}],["$","mo","mo-0",{"children":"="}],["$","msqrt","msqrt-0",{"children":["$","mrow","mrow-0",{"children":[["$","mo","mo-0",{"stretchy":"false","children":"("}],["$","mi","mi-0",{"mathvariant":"normal","children":"Œî"}],["$","mi","mi-1",{"children":"x"}],["$","msup","msup-0",{"children":[["$","mo","mo-0",{"stretchy":"false","children":")"}],["$","mn","mn-0",{"children":"2"}]]}],["$","mo","mo-1",{"children":"+"}],["$","mo","mo-2",{"stretchy":"false","children":"("}],["$","mi","mi-2",{"mathvariant":"normal","children":"Œî"}],["$","mi","mi-3",{"children":"y"}],["$","msup","msup-1",{"children":[["$","mo","mo-0",{"stretchy":"false","children":")"}],["$","mn","mn-0",{"children":"2"}]]}]]}]}]]}],["$","annotation","annotation-0",{"encoding":"application/x-tex","children":"d = \\sqrt{(\\Delta x)^2 + (\\Delta y)^2}"}]]}]}]}],["$","span","span-1",{"className":"katex-html","aria-hidden":"true","children":[["$","span","span-0",{"className":"base","children":[["$","span","span-0",{"className":"strut","style":{"height":"0.6944em"}}],["$","span","span-1",{"className":"mord mathnormal","children":"d"}],["$","span","span-2",{"className":"mspace","style":{"marginRight":"0.2778em"}}],["$","span","span-3",{"className":"mrel","children":"="}],["$","span","span-4",{"className":"mspace","style":{"marginRight":"0.2778em"}}]]}],["$","span","span-1",{"className":"base","children":[["$","span","span-0",{"className":"strut","style":{"height":"1.24em","verticalAlign":"-0.2561em"}}],["$","span","span-1",{"className":"mord sqrt","children":["$","span","span-0",{"className":"vlist-t vlist-t2","children":[["$","span","span-0",{"className":"vlist-r","children":[["$","span","span-0",{"className":"vlist","style":{"height":"0.9839em"},"children":[["$","span","span-0",{"className":"svg-align","style":{"top":"-3.2em"},"children":[["$","span","span-0",{"className":"pstrut","style":{"height":"3.2em"}}],["$","span","span-1",{"className":"mord","style":{"paddingLeft":"1em"},"children":[["$","span","span-0",{"className":"mopen","children":"("}],["$","span","span-1",{"className":"mord","children":"Œî"}],["$","span","span-2",{"className":"mord mathnormal","children":"x"}],["$","span","span-3",{"className":"mclose","children":[["$","span","span-0",{"className":"mclose","children":")"}],["$","span","span-1",{"className":"msupsub","children":["$","span","span-0",{"className":"vlist-t","children":["$","span","span-0",{"className":"vlist-r","children":["$","span","span-0",{"className":"vlist","style":{"height":"0.7401em"},"children":["$","span","span-0",{"style":{"top":"-2.989em","marginRight":"0.05em"},"children":[["$","span","span-0",{"className":"pstrut","style":{"height":"2.7em"}}],["$","span","span-1",{"className":"sizing reset-size6 size3 mtight","children":["$","span","span-0",{"className":"mord mtight","children":"2"}]}]]}]}]}]}]}]]}],["$","span","span-4",{"className":"mspace","style":{"marginRight":"0.2222em"}}],["$","span","span-5",{"className":"mbin","children":"+"}],["$","span","span-6",{"className":"mspace","style":{"marginRight":"0.2222em"}}],["$","span","span-7",{"className":"mopen","children":"("}],["$","span","span-8",{"className":"mord","children":"Œî"}],["$","span","span-9",{"className":"mord mathnormal","style":{"marginRight":"0.03588em"},"children":"y"}],["$","span","span-10",{"className":"mclose","children":[["$","span","span-0",{"className":"mclose","children":")"}],["$","span","span-1",{"className":"msupsub","children":["$","span","span-0",{"className":"vlist-t","children":["$","span","span-0",{"className":"vlist-r","children":["$","span","span-0",{"className":"vlist","style":{"height":"0.7401em"},"children":["$","span","span-0",{"style":{"top":"-2.989em","marginRight":"0.05em"},"children":[["$","span","span-0",{"className":"pstrut","style":{"height":"2.7em"}}],["$","span","span-1",{"className":"sizing reset-size6 size3 mtight","children":["$","span","span-0",{"className":"mord mtight","children":"2"}]}]]}]}]}]}]}]]}]]}]]}],["$","span","span-1",{"style":{"top":"-2.9439em"},"children":[["$","span","span-0",{"className":"pstrut","style":{"height":"3.2em"}}],["$","span","span-1",{"className":"hide-tail","style":{"minWidth":"1.02em","height":"1.28em"},"children":["$","svg","svg-0",{"xmlns":"http://www.w3.org/2000/svg","width":"400em","height":"1.28em","viewBox":"0 0 400000 1296","preserveAspectRatio":"xMinYMin slice","children":["$","path","path-0",{"d":"M263,681c0.7,0,18,39.7,52,119\nc34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120\nc340,-704.7,510.7,-1060.3,512,-1067\nl0 -0\nc4.7,-7.3,11,-11,19,-11\nH40000v40H1012.3\ns-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232\nc-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1\ns-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26\nc-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z\nM1001 80h400000v40h-400000z"}]}]}]]}]]}],["$","span","span-1",{"className":"vlist-s","children":"‚Äã"}]]}],["$","span","span-1",{"className":"vlist-r","children":["$","span","span-0",{"className":"vlist","style":{"height":"0.2561em"},"children":["$","span","span-0",{}]}]}]]}]}]]}]]}]]}]}],"\n",["$","p","p-24",{"className":"text-sm text-zinc-300 my-4 leading-relaxed","children":["wait, the earth is not flat!, it means the minimum distance between two positions in the earth surface is not a straight line, that's also the reason why we are using ",["$","code","code-0",{"className":"bg-zinc-900 text-blue-600 px-1 py-0.5 rounded-sm text-xs","children":"latitude"}]," and ",["$","code","code-1",{"className":"bg-zinc-900 text-blue-600 px-1 py-0.5 rounded-sm text-xs","children":"longitude"}]," instead of ",["$","code","code-2",{"className":"bg-zinc-900 text-blue-600 px-1 py-0.5 rounded-sm text-xs","children":"x, y, z"}]," positions. Instead of using eulerian distance, we have to use ",["$","code","code-3",{"className":"bg-zinc-900 text-blue-600 px-1 py-0.5 rounded-sm text-xs","children":"Haversine"}]," distance:"]}],"\n",["$","span","span-3",{"className":"katex-display","children":["$","span","span-0",{"className":"katex","children":[["$","span","span-0",{"className":"katex-mathml","children":["$","math","math-0",{"xmlns":"http://www.w3.org/1998/Math/MathML","display":"block","children":["$","semantics","semantics-0",{"children":[["$","mrow","mrow-0",{"children":[["$","mi","mi-0",{"children":"d"}],["$","mo","mo-0",{"children":"="}],["$","mn","mn-0",{"children":"2"}],["$","mi","mi-1",{"children":"r"}],["$","mi","mi-2",{"children":"arcsin"}],["$","mo","mo-1",{"children":"‚Å°"}],["$","mo","mo-2",{"fence":"false","stretchy":"true","minsize":"2.4em","maxsize":"2.4em","children":"("}],["$","msqrt","msqrt-0",{"children":["$","mfrac","mfrac-0",{"children":[["$","mrow","mrow-0",{"children":[["$","mn","mn-0",{"children":"1"}],["$","mo","mo-0",{"children":"‚àí"}],["$","mi","mi-0",{"children":"cos"}],["$","mo","mo-1",{"children":"‚Å°"}],["$","mo","mo-2",{"stretchy":"false","children":"("}],["$","mi","mi-1",{"mathvariant":"normal","children":"Œî"}],["$","mi","mi-2",{"children":"œï"}],["$","mo","mo-3",{"stretchy":"false","children":")"}],["$","mo","mo-4",{"children":"+"}],["$","mi","mi-3",{"children":"cos"}],["$","mo","mo-5",{"children":"‚Å°"}],["$","msub","msub-0",{"children":[["$","mi","mi-0",{"children":"œï"}],["$","mn","mn-0",{"children":"1"}]]}],["$","mo","mo-6",{"children":"‚ãÖ"}],["$","mi","mi-4",{"children":"cos"}],["$","mo","mo-7",{"children":"‚Å°"}],["$","msub","msub-1",{"children":[["$","mi","mi-0",{"children":"œï"}],["$","mn","mn-0",{"children":"2"}]]}],["$","mo","mo-8",{"children":"‚ãÖ"}],["$","mo","mo-9",{"stretchy":"false","children":"("}],["$","mn","mn-1",{"children":"1"}],["$","mo","mo-10",{"children":"‚àí"}],["$","mi","mi-5",{"children":"cos"}],["$","mo","mo-11",{"children":"‚Å°"}],["$","mo","mo-12",{"stretchy":"false","children":"("}],["$","mi","mi-6",{"mathvariant":"normal","children":"Œî"}],["$","mi","mi-7",{"children":"Œª"}],["$","mo","mo-13",{"stretchy":"false","children":")"}],["$","mo","mo-14",{"stretchy":"false","children":")"}]]}],["$","mn","mn-0",{"children":"2"}]]}]}],["$","mo","mo-3",{"fence":"false","stretchy":"true","minsize":"2.4em","maxsize":"2.4em","children":")"}]]}],["$","annotation","annotation-0",{"encoding":"application/x-tex","children":"d = 2r\\arcsin\\bigg( \\sqrt{\\frac{1-\\cos(\\Delta \\phi) + \\cos\\phi_{1}\\cdot \\cos\\phi_{2}\\cdot (1-\\cos(\\Delta \\lambda))}{2}} \\bigg)"}]]}]}]}],["$","span","span-1",{"className":"katex-html","aria-hidden":"true","children":[["$","span","span-0",{"className":"base","children":[["$","span","span-0",{"className":"strut","style":{"height":"0.6944em"}}],["$","span","span-1",{"className":"mord mathnormal","children":"d"}],["$","span","span-2",{"className":"mspace","style":{"marginRight":"0.2778em"}}],["$","span","span-3",{"className":"mrel","children":"="}],["$","span","span-4",{"className":"mspace","style":{"marginRight":"0.2778em"}}]]}],["$","span","span-1",{"className":"base","children":[["$","span","span-0",{"className":"strut","style":{"height":"2.6544em","verticalAlign":"-0.95em"}}],["$","span","span-1",{"className":"mord","children":"2"}],["$","span","span-2",{"className":"mord mathnormal","style":{"marginRight":"0.02778em"},"children":"r"}],["$","span","span-3",{"className":"mspace","style":{"marginRight":"0.1667em"}}],["$","span","span-4",{"className":"mop","children":"arcsin"}],["$","span","span-5",{"className":"mspace","style":{"marginRight":"0.1667em"}}],["$","span","span-6",{"className":"mord","children":["$","span","span-0",{"className":"delimsizing size3","children":"("}]}],["$","span","span-7",{"className":"mord sqrt","children":["$","span","span-0",{"className":"vlist-t vlist-t2","children":[["$","span","span-0",{"className":"vlist-r","children":[["$","span","span-0",{"className":"vlist","style":{"height":"1.7044em"},"children":[["$","span","span-0",{"className":"svg-align","style":{"top":"-4.4em"},"children":[["$","span","span-0",{"className":"pstrut","style":{"height":"4.4em"}}],["$","span","span-1",{"className":"mord","style":{"paddingLeft":"1em"},"children":["$","span","span-0",{"className":"mord","children":[["$","span","span-0",{"className":"mopen nulldelimiter"}],["$","span","span-1",{"className":"mfrac","children":["$","span","span-0",{"className":"vlist-t vlist-t2","children":[["$","span","span-0",{"className":"vlist-r","children":[["$","span","span-0",{"className":"vlist","style":{"height":"1.427em"},"children":[["$","span","span-0",{"style":{"top":"-2.314em"},"children":[["$","span","span-0",{"className":"pstrut","style":{"height":"3em"}}],["$","span","span-1",{"className":"mord","children":["$","span","span-0",{"className":"mord","children":"2"}]}]]}],["$","span","span-1",{"style":{"top":"-3.23em"},"children":[["$","span","span-0",{"className":"pstrut","style":{"height":"3em"}}],["$","span","span-1",{"className":"frac-line","style":{"borderBottomWidth":"0.04em"}}]]}],["$","span","span-2",{"style":{"top":"-3.677em"},"children":[["$","span","span-0",{"className":"pstrut","style":{"height":"3em"}}],["$","span","span-1",{"className":"mord","children":[["$","span","span-0",{"className":"mord","children":"1"}],["$","span","span-1",{"className":"mspace","style":{"marginRight":"0.2222em"}}],["$","span","span-2",{"className":"mbin","children":"‚àí"}],["$","span","span-3",{"className":"mspace","style":{"marginRight":"0.2222em"}}],["$","span","span-4",{"className":"mop","children":"cos"}],["$","span","span-5",{"className":"mopen","children":"("}],["$","span","span-6",{"className":"mord","children":"Œî"}],["$","span","span-7",{"className":"mord mathnormal","children":"œï"}],["$","span","span-8",{"className":"mclose","children":")"}],["$","span","span-9",{"className":"mspace","style":{"marginRight":"0.2222em"}}],["$","span","span-10",{"className":"mbin","children":"+"}],["$","span","span-11",{"className":"mspace","style":{"marginRight":"0.2222em"}}],["$","span","span-12",{"className":"mop","children":"cos"}],["$","span","span-13",{"className":"mspace","style":{"marginRight":"0.1667em"}}],["$","span","span-14",{"className":"mord","children":[["$","span","span-0",{"className":"mord mathnormal","children":"œï"}],["$","span","span-1",{"className":"msupsub","children":["$","span","span-0",{"className":"vlist-t vlist-t2","children":[["$","span","span-0",{"className":"vlist-r","children":[["$","span","span-0",{"className":"vlist","style":{"height":"0.3011em"},"children":["$","span","span-0",{"style":{"top":"-2.55em","marginLeft":"0em","marginRight":"0.05em"},"children":[["$","span","span-0",{"className":"pstrut","style":{"height":"2.7em"}}],["$","span","span-1",{"className":"sizing reset-size6 size3 mtight","children":["$","span","span-0",{"className":"mord mtight","children":["$","span","span-0",{"className":"mord mtight","children":"1"}]}]}]]}]}],["$","span","span-1",{"className":"vlist-s","children":"‚Äã"}]]}],["$","span","span-1",{"className":"vlist-r","children":["$","span","span-0",{"className":"vlist","style":{"height":"0.15em"},"children":["$","span","span-0",{}]}]}]]}]}]]}],["$","span","span-15",{"className":"mspace","style":{"marginRight":"0.2222em"}}],["$","span","span-16",{"className":"mbin","children":"‚ãÖ"}],["$","span","span-17",{"className":"mspace","style":{"marginRight":"0.2222em"}}],["$","span","span-18",{"className":"mop","children":"cos"}],["$","span","span-19",{"className":"mspace","style":{"marginRight":"0.1667em"}}],["$","span","span-20",{"className":"mord","children":[["$","span","span-0",{"className":"mord mathnormal","children":"œï"}],["$","span","span-1",{"className":"msupsub","children":["$","span","span-0",{"className":"vlist-t vlist-t2","children":[["$","span","span-0",{"className":"vlist-r","children":[["$","span","span-0",{"className":"vlist","style":{"height":"0.3011em"},"children":["$","span","span-0",{"style":{"top":"-2.55em","marginLeft":"0em","marginRight":"0.05em"},"children":[["$","span","span-0",{"className":"pstrut","style":{"height":"2.7em"}}],["$","span","span-1",{"className":"sizing reset-size6 size3 mtight","children":["$","span","span-0",{"className":"mord mtight","children":["$","span","span-0",{"className":"mord mtight","children":"2"}]}]}]]}]}],["$","span","span-1",{"className":"vlist-s","children":"‚Äã"}]]}],["$","span","span-1",{"className":"vlist-r","children":["$","span","span-0",{"className":"vlist","style":{"height":"0.15em"},"children":["$","span","span-0",{}]}]}]]}]}]]}],["$","span","span-21",{"className":"mspace","style":{"marginRight":"0.2222em"}}],["$","span","span-22",{"className":"mbin","children":"‚ãÖ"}],["$","span","span-23",{"className":"mspace","style":{"marginRight":"0.2222em"}}],["$","span","span-24",{"className":"mopen","children":"("}],["$","span","span-25",{"className":"mord","children":"1"}],["$","span","span-26",{"className":"mspace","style":{"marginRight":"0.2222em"}}],["$","span","span-27",{"className":"mbin","children":"‚àí"}],["$","span","span-28",{"className":"mspace","style":{"marginRight":"0.2222em"}}],["$","span","span-29",{"className":"mop","children":"cos"}],["$","span","span-30",{"className":"mopen","children":"("}],["$","span","span-31",{"className":"mord","children":"Œî"}],["$","span","span-32",{"className":"mord mathnormal","children":"Œª"}],["$","span","span-33",{"className":"mclose","children":"))"}]]}]]}]]}],["$","span","span-1",{"className":"vlist-s","children":"‚Äã"}]]}],["$","span","span-1",{"className":"vlist-r","children":["$","span","span-0",{"className":"vlist","style":{"height":"0.686em"},"children":["$","span","span-0",{}]}]}]]}]}],["$","span","span-2",{"className":"mclose nulldelimiter"}]]}]}]]}],["$","span","span-1",{"style":{"top":"-3.6644em"},"children":[["$","span","span-0",{"className":"pstrut","style":{"height":"4.4em"}}],["$","span","span-1",{"className":"hide-tail","style":{"minWidth":"1.02em","height":"2.48em"},"children":["$","svg","svg-0",{"xmlns":"http://www.w3.org/2000/svg","width":"400em","height":"2.48em","viewBox":"0 0 400000 2592","preserveAspectRatio":"xMinYMin slice","children":["$","path","path-0",{"d":"M424,2478\nc-1.3,-0.7,-38.5,-172,-111.5,-514c-73,-342,-109.8,-513.3,-110.5,-514\nc0,-2,-10.7,14.3,-32,49c-4.7,7.3,-9.8,15.7,-15.5,25c-5.7,9.3,-9.8,16,-12.5,20\ns-5,7,-5,7c-4,-3.3,-8.3,-7.7,-13,-13s-13,-13,-13,-13s76,-122,76,-122s77,-121,77,-121\ns209,968,209,968c0,-2,84.7,-361.7,254,-1079c169.3,-717.3,254.7,-1077.7,256,-1081\nl0 -0c4,-6.7,10,-10,18,-10 H400000\nv40H1014.6\ns-87.3,378.7,-272.6,1166c-185.3,787.3,-279.3,1182.3,-282,1185\nc-2,6,-10,9,-24,9\nc-8,0,-12,-0.7,-12,-2z M1001 80\nh400000v40h-400000z"}]}]}]]}]]}],["$","span","span-1",{"className":"vlist-s","children":"‚Äã"}]]}],["$","span","span-1",{"className":"vlist-r","children":["$","span","span-0",{"className":"vlist","style":{"height":"0.7356em"},"children":["$","span","span-0",{}]}]}]]}]}],["$","span","span-8",{"className":"mord","children":["$","span","span-0",{"className":"delimsizing size3","children":")"}]}]]}]]}]]}]}],"\n",["$","p","p-25",{"className":"text-sm text-zinc-300 my-4 leading-relaxed","children":["and ",["$","span","span-0",{"className":"katex","children":[["$","span","span-0",{"className":"katex-mathml","children":["$","math","math-0",{"xmlns":"http://www.w3.org/1998/Math/MathML","children":["$","semantics","semantics-0",{"children":[["$","mrow","mrow-0",{"children":[["$","mi","mi-0",{"children":"r"}],["$","mo","mo-0",{"children":"‚âà"}],["$","mn","mn-0",{"children":"6371"}],["$","mtext","mtext-0",{"children":"km"}]]}],["$","annotation","annotation-0",{"encoding":"application/x-tex","children":"r \\approx 6371 \\text{km}"}]]}]}]}],["$","span","span-1",{"className":"katex-html","aria-hidden":"true","children":[["$","span","span-0",{"className":"base","children":[["$","span","span-0",{"className":"strut","style":{"height":"0.4831em"}}],["$","span","span-1",{"className":"mord mathnormal","style":{"marginRight":"0.02778em"},"children":"r"}],["$","span","span-2",{"className":"mspace","style":{"marginRight":"0.2778em"}}],["$","span","span-3",{"className":"mrel","children":"‚âà"}],["$","span","span-4",{"className":"mspace","style":{"marginRight":"0.2778em"}}]]}],["$","span","span-1",{"className":"base","children":[["$","span","span-0",{"className":"strut","style":{"height":"0.6944em"}}],["$","span","span-1",{"className":"mord","children":"6371"}],["$","span","span-2",{"className":"mord text","children":["$","span","span-0",{"className":"mord","children":"km"}]}]]}]]}]]}],"."]}],"\n",["$","p","p-26",{"className":"text-sm text-zinc-300 my-4 leading-relaxed","children":["This is my implementation in ",["$","strong","strong-0",{"children":"Rust"}],", don't ask me why I wrote it in rust, I just wanted to try something new."]}],"\n",["$","pre","pre-3",{"className":"rounded-sm p-4 overflow-auto bg-zinc-900 text-zinc-100 my-4 border border-zinc-800","children":["$","code","code-0",{"className":"hljs language-rust text-xs","children":[["$","span","span-0",{"className":"hljs-keyword","children":"let"}]," ",["$","span","span-1",{"className":"hljs-variable","children":"destination_node"}]," = graph.nodes.",["$","span","span-2",{"className":"hljs-title function_ invoke__","children":"get"}],"(&destination).",["$","span","span-3",{"className":"hljs-title function_ invoke__","children":"unwrap"}],"().",["$","span","span-4",{"className":"hljs-title function_ invoke__","children":"clone"}],"();\n",["$","span","span-5",{"className":"hljs-keyword","children":"while"}]," ",["$","span","span-6",{"className":"hljs-keyword","children":"let"}]," ",["$","span","span-7",{"className":"hljs-variable","children":"Some"}],"(State { weight: _, node_id }) = priority_queue.",["$","span","span-8",{"className":"hljs-title function_ invoke__","children":"pop"}],"() {\n    ",["$","span","span-9",{"className":"hljs-keyword","children":"let"}]," ",["$","span","span-10",{"className":"hljs-variable","children":"weight_to_node"}]," = weight_from_source\n        .",["$","span","span-11",{"className":"hljs-title function_ invoke__","children":"get"}],"(&node_id)\n        .",["$","span","span-12",{"className":"hljs-title function_ invoke__","children":"copied"}],"()\n        .",["$","span","span-13",{"className":"hljs-title function_ invoke__","children":"unwrap_or"}],"(INFINITY);\n    ",["$","span","span-14",{"className":"hljs-keyword","children":"if"}]," node_id == destination {\n        ",["$","span","span-15",{"className":"hljs-keyword","children":"return"}]," ",["$","span","span-16",{"className":"hljs-title function_ invoke__","children":"Some"}],"((\n            previous_node,\n            visited_edges,\n            ",["$","span","span-17",{"className":"hljs-type","children":"Vec"}],"::",["$","span","span-18",{"className":"hljs-title function_ invoke__","children":"from_iter"}],"(active_edges),\n            weight_to_node,\n            iteration,\n        ));\n    }\n    ",["$","span","span-19",{"className":"hljs-keyword","children":"let"}]," ",["$","span","span-20",{"className":"hljs-variable","children":"current_node"}],": Node = graph.nodes.",["$","span","span-21",{"className":"hljs-title function_ invoke__","children":"get"}],"(&node_id).",["$","span","span-22",{"className":"hljs-title function_ invoke__","children":"unwrap"}],"().",["$","span","span-23",{"className":"hljs-title function_ invoke__","children":"clone"}],"();\n    ",["$","span","span-24",{"className":"hljs-keyword","children":"if"}]," visited_nodes.",["$","span","span-25",{"className":"hljs-title function_ invoke__","children":"contains"}],"(&node_id) {\n        ",["$","span","span-26",{"className":"hljs-keyword","children":"continue"}],";\n    }\n    visited_nodes.",["$","span","span-27",{"className":"hljs-title function_ invoke__","children":"insert"}],"(node_id);\n    ",["$","span","span-28",{"className":"hljs-keyword","children":"let"}]," ",["$","span","span-29",{"className":"hljs-variable","children":"next_nodes_id"}],": ",["$","span","span-30",{"className":"hljs-type","children":"Vec"}],"<NodeId> = current_node.next_nodes;\n    ",["$","span","span-31",{"className":"hljs-keyword","children":"for"}]," ",["$","span","span-32",{"className":"hljs-variable","children":"next_node_id"}]," ",["$","span","span-33",{"className":"hljs-keyword","children":"in"}]," &next_nodes_id {\n        iteration += ",["$","span","span-34",{"className":"hljs-number","children":"1"}],";\n        ",["$","span","span-35",{"className":"hljs-keyword","children":"let"}]," ",["$","span","span-36",{"className":"hljs-variable","children":"next_node"}],": Node = graph.nodes.",["$","span","span-37",{"className":"hljs-title function_ invoke__","children":"get"}],"(&next_node_id).",["$","span","span-38",{"className":"hljs-title function_ invoke__","children":"unwrap"}],"().",["$","span","span-39",{"className":"hljs-title function_ invoke__","children":"clone"}],"();\n        ",["$","span","span-40",{"className":"hljs-keyword","children":"let"}]," ",["$","span","span-41",{"className":"hljs-variable","children":"current_edge_id"}],": EdgeId = (node_id, *next_node_id);\n        ",["$","span","span-42",{"className":"hljs-keyword","children":"let"}]," ",["$","span","span-43",{"className":"hljs-variable","children":"current_edge"}],": Edge = graph.edges.",["$","span","span-44",{"className":"hljs-title function_ invoke__","children":"get"}],"(&current_edge_id).",["$","span","span-45",{"className":"hljs-title function_ invoke__","children":"unwrap"}],"().",["$","span","span-46",{"className":"hljs-title function_ invoke__","children":"clone"}],"();\n        visited_edges.",["$","span","span-47",{"className":"hljs-title function_ invoke__","children":"push"}],"(current_edge_id);\n        active_edges.",["$","span","span-48",{"className":"hljs-title function_ invoke__","children":"remove"}],"(&current_edge_id);\n        ",["$","span","span-49",{"className":"hljs-keyword","children":"let"}]," ",["$","span","span-50",{"className":"hljs-variable","children":"edge_weight"}],": ",["$","span","span-51",{"className":"hljs-type","children":"f64"}]," = (current_edge.length / ",["$","span","span-52",{"className":"hljs-number","children":"1000"}],".) / (current_edge.maxspeed ",["$","span","span-53",{"className":"hljs-keyword","children":"as"}]," ",["$","span","span-54",{"className":"hljs-type","children":"f64"}],");\n        ",["$","span","span-55",{"className":"hljs-keyword","children":"let"}]," ",["$","span","span-56",{"className":"hljs-variable","children":"destination_distance"}],": ",["$","span","span-57",{"className":"hljs-type","children":"f64"}]," = ",["$","span","span-58",{"className":"hljs-title function_ invoke__","children":"find_distance_by_nodes"}],"(\n            next_node.lat,\n            next_node.lon,\n            destination_node.lat,\n            destination_node.lon,\n        )\n        .",["$","span","span-59",{"className":"hljs-keyword","children":"await"}],";\n        ",["$","span","span-60",{"className":"hljs-keyword","children":"let"}]," ",["$","span","span-61",{"className":"hljs-variable","children":"heuristic_weight"}],": ",["$","span","span-62",{"className":"hljs-type","children":"f64"}]," = destination_distance / max_speed_allowed;\n        ",["$","span","span-63",{"className":"hljs-keyword","children":"let"}]," ",["$","span","span-64",{"className":"hljs-variable","children":"new_weight"}],": ",["$","span","span-65",{"className":"hljs-type","children":"f64"}]," = weight_to_node + edge_weight;\n        ",["$","span","span-66",{"className":"hljs-keyword","children":"if"}]," weight_from_source\n            .",["$","span","span-67",{"className":"hljs-title function_ invoke__","children":"get"}],"(next_node_id)\n            .",["$","span","span-68",{"className":"hljs-title function_ invoke__","children":"copied"}],"()\n            .",["$","span","span-69",{"className":"hljs-title function_ invoke__","children":"unwrap_or"}],"(INFINITY)\n            > new_weight\n        {\n            weight_from_source.",["$","span","span-70",{"className":"hljs-title function_ invoke__","children":"insert"}],"(*next_node_id, new_weight);\n            previous_node.",["$","span","span-71",{"className":"hljs-title function_ invoke__","children":"insert"}],"(*next_node_id, node_id);\n            priority_queue.",["$","span","span-72",{"className":"hljs-title function_ invoke__","children":"push"}],"(State {\n                weight: new_weight + heuristic_weight,\n                node_id: *next_node_id,\n            });\n            ",["$","span","span-73",{"className":"hljs-keyword","children":"let"}]," ",["$","span","span-74",{"className":"hljs-variable","children":"nodes_to_visit"}],": ",["$","span","span-75",{"className":"hljs-type","children":"Vec"}],"<NodeId> =\n                graph.nodes.",["$","span","span-76",{"className":"hljs-title function_ invoke__","children":"get"}],"(&next_node_id).",["$","span","span-77",{"className":"hljs-title function_ invoke__","children":"unwrap"}],"().",["$","span","span-78",{"className":"hljs-title function_ invoke__","children":"clone"}],"().next_nodes;\n            ",["$","span","span-79",{"className":"hljs-keyword","children":"for"}]," ",["$","span","span-80",{"className":"hljs-variable","children":"to_visit_node_id"}]," ",["$","span","span-81",{"className":"hljs-keyword","children":"in"}]," &nodes_to_visit {\n                active_edges.",["$","span","span-82",{"className":"hljs-title function_ invoke__","children":"insert"}],"((*next_node_id, *to_visit_node_id));\n            }\n        }\n    }\n}\n"]}]}],"\n",["$","h3","h3-3",{"className":"text-lg font-bold mt-6 mb-3 text-zinc-100","children":"A* enhanced algorithm"}],"\n",["$","p","p-27",{"className":"text-sm text-zinc-300 my-4 leading-relaxed","children":"This is my modification of the A* algorithm, it can't guarantee you a path but in most of the cases I've tested, it was able to beat A* and find the same solution in fewer iterations."}],"\n",["$","p","p-28",{"className":"text-sm text-zinc-300 my-4 leading-relaxed","children":["My idea is to use a level max distance that is constantly updated for a node ",["$","span","span-0",{"className":"katex","children":[["$","span","span-0",{"className":"katex-mathml","children":["$","math","math-0",{"xmlns":"http://www.w3.org/1998/Math/MathML","children":["$","semantics","semantics-0",{"children":[["$","mrow","mrow-0",{"children":["$","mi","mi-0",{"children":"u"}]}],["$","annotation","annotation-0",{"encoding":"application/x-tex","children":"u"}]]}]}]}],["$","span","span-1",{"className":"katex-html","aria-hidden":"true","children":["$","span","span-0",{"className":"base","children":[["$","span","span-0",{"className":"strut","style":{"height":"0.4306em"}}],["$","span","span-1",{"className":"mord mathnormal","children":"u"}]]}]}]]}],". If the haversine distance is greater than ",["$","code","code-0",{"className":"bg-zinc-900 text-blue-600 px-1 py-0.5 rounded-sm text-xs","children":"2 * best distance / ln(1 + best distance)"}]," then the node is skipped, the best distance is calculated as the minimum between the ",["$","code","code-1",{"className":"bg-zinc-900 text-blue-600 px-1 py-0.5 rounded-sm text-xs","children":"Haversine(source, destination)"}]," and ",["$","code","code-2",{"className":"bg-zinc-900 text-blue-600 px-1 py-0.5 rounded-sm text-xs","children":"Haversine(u, destination)"}]]}],"\n",["$","pre","pre-4",{"className":"rounded-sm p-4 overflow-auto bg-zinc-900 text-zinc-100 my-4 border border-zinc-800","children":["$","code","code-0",{"className":"hljs language-rust text-xs","children":[["$","span","span-0",{"className":"hljs-keyword","children":"if"}]," level_max_distance != INFINITY {\n    level_max_distance = ",["$","span","span-1",{"className":"hljs-type","children":"f64"}],"::",["$","span","span-2",{"className":"hljs-title function_ invoke__","children":"max"}],"(level_max_distance, destination_distance);\n} ",["$","span","span-3",{"className":"hljs-keyword","children":"else"}]," {\n    level_max_distance = destination_distance;\n}\n",["$","span","span-4",{"className":"hljs-keyword","children":"if"}]," best_node_distance != INFINITY {\n    ",["$","span","span-5",{"className":"hljs-keyword","children":"if"}]," destination_distance * ",["$","span","span-6",{"className":"hljs-type","children":"f64"}],"::",["$","span","span-7",{"className":"hljs-title function_ invoke__","children":"min"}],"(",["$","span","span-8",{"className":"hljs-number","children":"1.0"}],", (",["$","span","span-9",{"className":"hljs-number","children":"1.0"}]," + best_node_distance).",["$","span","span-10",{"className":"hljs-title function_ invoke__","children":"ln"}],"())\n        > ",["$","span","span-11",{"className":"hljs-number","children":"2.0"}]," * best_node_distance\n    {\n        ",["$","span","span-12",{"className":"hljs-keyword","children":"continue"}],";\n    } ",["$","span","span-13",{"className":"hljs-keyword","children":"else"}]," {\n        best_node_distance =\n            ",["$","span","span-14",{"className":"hljs-type","children":"f64"}],"::",["$","span","span-15",{"className":"hljs-title function_ invoke__","children":"min"}],"(source_to_destination_min_distance, destination_distance);\n    }\n}\n"]}]}],"\n",["$","p","p-29",{"className":"text-sm text-zinc-300 my-4 leading-relaxed","children":"It means that nodes that make a step backwards are penalized more than nodes that make you move forward to the destination. It will be clearer when you can see the plots."}],"\n",["$","h2","h2-2",{"className":"text-xl font-bold mt-8 mb-4 text-zinc-100 border-b border-zinc-800 pb-2","children":"Plotting"}],"\n",["$","p","p-30",{"className":"text-sm text-zinc-300 my-4 leading-relaxed","children":[["$","code","code-0",{"className":"bg-zinc-900 text-blue-600 px-1 py-0.5 rounded-sm text-xs","children":"NetworkX"}]," already allows us to plot a downloaded map and customize nodes and edges, so the remaining step is to find the visited edges and the edges that belong to the fastest path."]}],"\n",["$","pre","pre-5",{"className":"rounded-sm p-4 overflow-auto bg-zinc-900 text-zinc-100 my-4 border border-zinc-800","children":["$","code","code-0",{"className":"hljs language-py text-xs","children":[["$","span","span-0",{"className":"hljs-keyword","children":"def"}]," ",["$","span","span-1",{"className":"hljs-title function_","children":"save_graph"}],"(",["$","span","span-2",{"className":"hljs-params","children":["\n    graph: MultiDiGraph,\n    edges_in_path: ",["$","span","span-0",{"className":"hljs-type","children":"Set"}],"[EdgeId],\n    visited: ",["$","span","span-1",{"className":"hljs-type","children":"Set"}],"[EdgeId],\n    active: ",["$","span","span-2",{"className":"hljs-type","children":"Set"}],"[EdgeId],\n    source: NodeId,\n    destination: NodeId,\n    solution_key: ",["$","span","span-3",{"className":"hljs-built_in","children":"str"}],",\n    dist: ",["$","span","span-4",{"className":"hljs-built_in","children":"float"}],",\n    time: ",["$","span","span-5",{"className":"hljs-built_in","children":"str"}],",\n"]}],") -> ",["$","span","span-3",{"className":"hljs-built_in","children":"str"}],":\n    node_size: ",["$","span","span-4",{"className":"hljs-type","children":"List"}],"[",["$","span","span-5",{"className":"hljs-built_in","children":"float"}],"] = []\n    node_alpha: ",["$","span","span-6",{"className":"hljs-type","children":"List"}],"[",["$","span","span-7",{"className":"hljs-built_in","children":"float"}],"] = []\n    node_color: ",["$","span","span-8",{"className":"hljs-type","children":"List"}],"[Color] = []\n    ",["$","span","span-9",{"className":"hljs-keyword","children":"for"}]," node ",["$","span","span-10",{"className":"hljs-keyword","children":"in"}]," cast(",["$","span","span-11",{"className":"hljs-type","children":"List"}],"[NodeId], graph.nodes):\n        ",["$","span","span-12",{"className":"hljs-keyword","children":"if"}]," node ",["$","span","span-13",{"className":"hljs-keyword","children":"in"}]," (source, destination):\n            node_size.append(POINT_SIZE)\n            node_alpha.append(POINT_ALPHA)\n            ",["$","span","span-14",{"className":"hljs-keyword","children":"if"}]," node == source:\n                node_color.append(",["$","span","span-15",{"className":"hljs-string","children":"\"blue\""}],")\n            ",["$","span","span-16",{"className":"hljs-keyword","children":"else"}],":\n                node_color.append(",["$","span","span-17",{"className":"hljs-string","children":"\"red\""}],")\n        ",["$","span","span-18",{"className":"hljs-keyword","children":"else"}],":\n            node_size.append(NODE_SIZE)\n            node_alpha.append(NODE_ALPHA)\n            node_color.append(",["$","span","span-19",{"className":"hljs-string","children":"\"white\""}],")\n    edge_alpha: ",["$","span","span-20",{"className":"hljs-type","children":"List"}],"[",["$","span","span-21",{"className":"hljs-built_in","children":"float"}],"] = []\n    edge_color: ",["$","span","span-22",{"className":"hljs-type","children":"List"}],"[",["$","span","span-23",{"className":"hljs-built_in","children":"str"}]," | ",["$","span","span-24",{"className":"hljs-type","children":"Tuple"}],"[",["$","span","span-25",{"className":"hljs-built_in","children":"float"}],", ",["$","span","span-26",{"className":"hljs-built_in","children":"float"}],", ",["$","span","span-27",{"className":"hljs-built_in","children":"float"}],", ",["$","span","span-28",{"className":"hljs-built_in","children":"float"}],"]] = []\n    edge_linewidth: ",["$","span","span-29",{"className":"hljs-type","children":"List"}],"[",["$","span","span-30",{"className":"hljs-built_in","children":"float"}],"] = []\n    ",["$","span","span-31",{"className":"hljs-keyword","children":"for"}]," edge ",["$","span","span-32",{"className":"hljs-keyword","children":"in"}]," graph.edges:\n        edge_id = (edge[",["$","span","span-33",{"className":"hljs-number","children":"0"}],"], edge[",["$","span","span-34",{"className":"hljs-number","children":"1"}],"])\n        ",["$","span","span-35",{"className":"hljs-keyword","children":"if"}]," edge_id ",["$","span","span-36",{"className":"hljs-keyword","children":"in"}]," edges_in_path:\n            edge_color.append(PathEdge.color)\n            edge_alpha.append(PathEdge.alpha)\n            edge_linewidth.append(PathEdge.linewidth)\n        ",["$","span","span-37",{"className":"hljs-keyword","children":"elif"}]," edge_id ",["$","span","span-38",{"className":"hljs-keyword","children":"in"}]," visited:\n            edge_color.append(VisitedEdge.color)\n            edge_alpha.append(VisitedEdge.alpha)\n            edge_linewidth.append(VisitedEdge.linewidth)\n        ",["$","span","span-39",{"className":"hljs-keyword","children":"elif"}]," edge_id ",["$","span","span-40",{"className":"hljs-keyword","children":"in"}]," active:\n            edge_color.append(ActiveEdge.color)\n            edge_alpha.append(ActiveEdge.alpha)\n            edge_linewidth.append(ActiveEdge.linewidth)\n        ",["$","span","span-41",{"className":"hljs-keyword","children":"else"}],":\n            edge_color.append(UnvisitedEdge.color)\n            edge_alpha.append(UnvisitedEdge.alpha)\n            edge_linewidth.append(UnvisitedEdge.linewidth)\n\n    fig, ax = ox.plot_graph(\n        graph,\n        node_size=node_size,  ",["$","span","span-42",{"className":"hljs-comment","children":"# type: ignore"}],"\n        node_alpha=node_alpha,  ",["$","span","span-43",{"className":"hljs-comment","children":"# type: ignore"}],"\n        edge_color=edge_color,  ",["$","span","span-44",{"className":"hljs-comment","children":"# type: ignore"}],"\n        edge_alpha=edge_alpha,\n        edge_linewidth=edge_linewidth,  ",["$","span","span-45",{"className":"hljs-comment","children":"# type: ignore"}],"\n        node_color=node_color,  ",["$","span","span-46",{"className":"hljs-comment","children":"# type: ignore"}],"\n        bgcolor=",["$","span","span-47",{"className":"hljs-string","children":"\"#000000\""}],",\n        show=",["$","span","span-48",{"className":"hljs-literal","children":"False"}],",\n        close=",["$","span","span-49",{"className":"hljs-literal","children":"False"}],",\n    )\n    title: ",["$","span","span-50",{"className":"hljs-built_in","children":"str"}]," = ",["$","span","span-51",{"className":"hljs-string","children":"\"\\n\""}],".join([",["$","span","span-52",{"className":"hljs-string","children":["f\"Distance: ",["$","span","span-0",{"className":"hljs-subst","children":"{dist}"}]," km\""]}],", ",["$","span","span-53",{"className":"hljs-string","children":["f\"Time: ",["$","span","span-0",{"className":"hljs-subst","children":"{time}"}],"\""]}],"])\n    ax.set_title(title, color=",["$","span","span-54",{"className":"hljs-string","children":"\"#3b528b\""}],", fontsize=",["$","span","span-55",{"className":"hljs-number","children":"10"}],")\n"]}]}],"\n",["$","h2","h2-3",{"className":"text-xl font-bold mt-8 mb-4 text-zinc-100 border-b border-zinc-800 pb-2","children":"Final considerations"}],"\n",["$","p","p-31",{"className":"text-sm text-zinc-300 my-4 leading-relaxed","children":"I've explained in general terms how this project was built, however there are many more details that I couldn't explain, nevertheless I want to make a quick mention to them."}],"\n",["$","ol","ol-1",{"className":"text-xs list-decimal pl-6 my-4 text-zinc-300 space-y-2","children":["\n",["$","li","li-0",{"className":"text-zinc-300","children":"Step functions to orchestrate the lambda functions."}],"\n",["$","li","li-1",{"className":"text-zinc-300","children":"Preload most common graphs and upload them to S3 with a unique graph id and store it in dynamo for quick queries."}],"\n",["$","li","li-2",{"className":"text-zinc-300","children":"If the map is already in S3, then no need to download the complete graph, only a small radius around the position to calculate the node id."}],"\n",["$","li","li-3",{"className":"text-zinc-300","children":["Instead of using the heavy map from ",["$","code","code-0",{"className":"bg-zinc-900 text-blue-600 px-1 py-0.5 rounded-sm text-xs","children":"NetworkX"}],", use a simplified graph containing only the necessary information. Store it in S3 as well."]}],"\n",["$","li","li-4",{"className":"text-zinc-300","children":"Deploy an API GW and a presigned url to retrieve the plot."}],"\n",["$","li","li-5",{"className":"text-zinc-300","children":"Use lifecycle configuration to delete old plots."}],"\n"]}],"\n",["$","div","img-0",{"className":"image-container my-8","children":["$","img",null,{"src":"https://raw.githubusercontent.com/HeNeos/heneos.github.io/master/assets/img/cloud/graphs_algorithms_in_maps/GraphAlgorithmsInMaps.drawio.png","alt":"","width":"80%","height":"auto","className":"object-contain mx-auto"}]}],"\n",["$","h2","h2-4",{"className":"text-xl font-bold mt-8 mb-4 text-zinc-100 border-b border-zinc-800 pb-2","children":"Results"}],"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",["$","div","table-0",{"className":"overflow-x-auto","style":{"WebkitOverflowScrolling":"touch"},"children":["$","table",null,{"className":"min-w-max divide-y divide-zinc-800 border border-zinc-800 rounded-sm","children":[["$","thead","thead-0",{"children":["$","tr","tr-0",{"children":[["$","th","th-0",{"className":"text-sm px-4 py-3 text-left text-xs font-medium text-zinc-400 uppercase tracking-wider bg-zinc-900 border-b border-zinc-800","children":"Place"}],["$","th","th-1",{"className":"text-sm px-4 py-3 text-left text-xs font-medium text-zinc-400 uppercase tracking-wider bg-zinc-900 border-b border-zinc-800","children":"Dijkstra"}],["$","th","th-2",{"className":"text-sm px-4 py-3 text-left text-xs font-medium text-zinc-400 uppercase tracking-wider bg-zinc-900 border-b border-zinc-800","children":"A*"}]]}]}],["$","tbody","tbody-0",{"children":[["$","tr","tr-0",{"children":[["$","td","td-0",{"className":"text-sm px-4 py-3 whitespace-nowrap text-zinc-300 border-b border-zinc-800","children":"Milan"}],["$","td","td-1",{"className":"text-sm px-4 py-3 whitespace-nowrap text-zinc-300 border-b border-zinc-800","children":["$","div","img-0",{"className":"image-container my-8","children":["$","img",null,{"src":"https://raw.githubusercontent.com/HeNeos/heneos.github.io/master/assets/img/cloud/graphs_algorithms_in_maps/dijkstra-path_Milan.png","alt":"","width":"400px","height":"auto","className":"object-contain mx-auto"}]}]}],["$","td","td-2",{"className":"text-sm px-4 py-3 whitespace-nowrap text-zinc-300 border-b border-zinc-800","children":["$","div","img-0",{"className":"image-container my-8","children":["$","img",null,{"src":"https://raw.githubusercontent.com/HeNeos/heneos.github.io/master/assets/img/cloud/graphs_algorithms_in_maps/a_star-path_Milan.png","alt":"","width":"400px","height":"auto","className":"object-contain mx-auto"}]}]}]]}],["$","tr","tr-1",{"children":[["$","td","td-0",{"className":"text-sm px-4 py-3 whitespace-nowrap text-zinc-300 border-b border-zinc-800","children":"Munich"}],["$","td","td-1",{"className":"text-sm px-4 py-3 whitespace-nowrap text-zinc-300 border-b border-zinc-800","children":["$","div","img-0",{"className":"image-container my-8","children":["$","img",null,{"src":"https://raw.githubusercontent.com/HeNeos/heneos.github.io/master/assets/img/cloud/graphs_algorithms_in_maps/dijkstra-path_Munich.png","alt":"","width":"400px","height":"auto","className":"object-contain mx-auto"}]}]}],["$","td","td-2",{"className":"text-sm px-4 py-3 whitespace-nowrap text-zinc-300 border-b border-zinc-800","children":["$","div","img-0",{"className":"image-container my-8","children":["$","img",null,{"src":"https://raw.githubusercontent.com/HeNeos/heneos.github.io/master/assets/img/cloud/graphs_algorithms_in_maps/a_star-path_Munich.png","alt":"","width":"400px","height":"auto","className":"object-contain mx-auto"}]}]}]]}],["$","tr","tr-2",{"children":[["$","td","td-0",{"className":"text-sm px-4 py-3 whitespace-nowrap text-zinc-300 border-b border-zinc-800","children":"Paris"}],["$","td","td-1",{"className":"text-sm px-4 py-3 whitespace-nowrap text-zinc-300 border-b border-zinc-800","children":["$","div","img-0",{"className":"image-container my-8","children":["$","img",null,{"src":"https://raw.githubusercontent.com/HeNeos/heneos.github.io/master/assets/img/cloud/graphs_algorithms_in_maps/dijkstra-path_Paris.png","alt":"","width":"400px","height":"auto","className":"object-contain mx-auto"}]}]}],["$","td","td-2",{"className":"text-sm px-4 py-3 whitespace-nowrap text-zinc-300 border-b border-zinc-800","children":["$","div","img-0",{"className":"image-container my-8","children":["$","img",null,{"src":"https://raw.githubusercontent.com/HeNeos/heneos.github.io/master/assets/img/cloud/graphs_algorithms_in_maps/a_star-path_Paris.png","alt":"","width":"400px","height":"auto","className":"object-contain mx-auto"}]}]}]]}]]}]]}]}],"\n",["$","p","p-32",{"className":"text-sm text-zinc-300 my-4 leading-relaxed","children":"Compare it with my modified version :)"}],"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",["$","div","table-1",{"className":"overflow-x-auto","style":{"WebkitOverflowScrolling":"touch"},"children":["$","table",null,{"className":"min-w-max divide-y divide-zinc-800 border border-zinc-800 rounded-sm","children":[["$","thead","thead-0",{"children":["$","tr","tr-0",{"children":[["$","th","th-0",{"className":"text-sm px-4 py-3 text-left text-xs font-medium text-zinc-400 uppercase tracking-wider bg-zinc-900 border-b border-zinc-800","children":"Place"}],["$","th","th-1",{"className":"text-sm px-4 py-3 text-left text-xs font-medium text-zinc-400 uppercase tracking-wider bg-zinc-900 border-b border-zinc-800","children":"A* enhanced"}]]}]}],["$","tbody","tbody-0",{"children":[["$","tr","tr-0",{"children":[["$","td","td-0",{"className":"text-sm px-4 py-3 whitespace-nowrap text-zinc-300 border-b border-zinc-800","children":"Milan"}],["$","td","td-1",{"className":"text-sm px-4 py-3 whitespace-nowrap text-zinc-300 border-b border-zinc-800","children":["$","div","img-0",{"className":"image-container my-8","children":["$","img",null,{"src":"https://raw.githubusercontent.com/HeNeos/heneos.github.io/master/assets/img/cloud/graphs_algorithms_in_maps/a_star_enhanced-path_Milan.png","alt":"","width":"400px","height":"auto","className":"object-contain mx-auto"}]}]}]]}],["$","tr","tr-1",{"children":[["$","td","td-0",{"className":"text-sm px-4 py-3 whitespace-nowrap text-zinc-300 border-b border-zinc-800","children":"Munich"}],["$","td","td-1",{"className":"text-sm px-4 py-3 whitespace-nowrap text-zinc-300 border-b border-zinc-800","children":["$","div","img-0",{"className":"image-container my-8","children":["$","img",null,{"src":"https://raw.githubusercontent.com/HeNeos/heneos.github.io/master/assets/img/cloud/graphs_algorithms_in_maps/a_star_enhanced-path_Munich.png","alt":"","width":"400px","height":"auto","className":"object-contain mx-auto"}]}]}]]}],["$","tr","tr-2",{"children":[["$","td","td-0",{"className":"text-sm px-4 py-3 whitespace-nowrap text-zinc-300 border-b border-zinc-800","children":"Paris"}],["$","td","td-1",{"className":"text-sm px-4 py-3 whitespace-nowrap text-zinc-300 border-b border-zinc-800","children":["$","div","img-0",{"className":"image-container my-8","children":["$","img",null,{"src":"https://raw.githubusercontent.com/HeNeos/heneos.github.io/master/assets/img/cloud/graphs_algorithms_in_maps/a_star_enhanced-path_Paris.png","alt":"","width":"400px","height":"auto","className":"object-contain mx-auto"}]}]}]]}]]}]]}]}],"\n",["$","p","p-33",{"className":"text-sm text-zinc-300 my-4 leading-relaxed","children":"You can try it running:"}],"\n",["$","pre","pre-6",{"className":"rounded-sm p-4 overflow-auto bg-zinc-900 text-zinc-100 my-4 border border-zinc-800","children":["$","code","code-0",{"className":"hljs language-perl text-xs","children":["curl -i ",["$","span","span-0",{"className":"hljs-string","children":["\"https://u4buvcwtvp4miopkjjqadffazq0zjric.lambda-url.us-east-1.on.aws/?source=Paris,",["$","span","span-0",{"className":"hljs-variable","children":"%20Gros"}],"-Caillou&dest=Paris,",["$","span","span-1",{"className":"hljs-variable","children":"%20Charonne"}],"&algorithm=a_star_enhanced\""]}],"\n"]}]}],"\n",["$","p","p-34",{"className":"text-sm text-zinc-300 my-4 leading-relaxed","children":"It could takes a few seconds or minutes depending how big is the map and if the lambda is already warm."}],"\n",["$","h2","h2-5",{"className":"text-xl font-bold mt-8 mb-4 text-zinc-100 border-b border-zinc-800 pb-2","children":"Further work"}],"\n",["$","p","p-35",{"className":"text-sm text-zinc-300 my-4 leading-relaxed","children":["I still have some optimizations pending that could make this project more interesting. One of the biggest limitations is that plotting/downloading the graph can take long time, for example for Lima, Peru is almost impossible to plot in the lambda because it has many roads and the map is 4 times bigger than others. It's not an issue with the algorithm because Rust runs very fast and can find the path in few seconds, the issue is in how ",["$","code","code-0",{"className":"bg-zinc-900 text-blue-600 px-1 py-0.5 rounded-sm text-xs","children":"NetworkX"}]," is plotting the map, so it involves making some changes in the library or building my own library to plot it, however I think it's really out of scope for now."]}],"\n",["$","p","p-36",{"className":"text-sm text-zinc-300 my-4 leading-relaxed","children":["Next big improvement I'd like to add is to be able to find the path for different cities or different countries, as I mention at the beginning, the problem is that the map could be very large and then almost impossible to get all data in a reasonable time, but then the question is how google maps can do it? The answer is based on the fact that each city could be considered as a small ",["$","em","em-0",{"children":"isolated"}]," graph. This works because there are only a few roads that can be used to go from city A to city B, so it is enough to find the best solution in each isolated graph, and then include some more edges only at the border that are used as the main roads to move between cities. There is a clever way to compress this idea and it's with graph layers, if you zoom-out in google maps, you can stop seeing some roads, you may think it's because of a UI decision to keep it minimalistic and not oversaturate the map, but actually it's a really good explanation about how the layers works because in large distances, we only care about finding the optimal path between these main roads (upper layers) and not in the smaller ones (lower layer). Of course, it's not as easy as I describe it here, google also implements some graph simplifications like removing some edges that could be considered subotpimal or not necessary when we are working in an upper layer."]}],"\n",["$","p","p-37",{"className":"text-sm text-zinc-300 my-4 leading-relaxed","children":"Additionally to that, we can even simplify more the graph abstraction. If we run Floyd Warshall for a city, we can make a statistic to know which roads are used the most and which are never used, then we can give a priority to these edges or delete some of them because we have this pre-computed information before, leading to fewer iterations."}],"\n",["$","p","p-38",{"className":"text-sm text-zinc-300 my-4 leading-relaxed","children":"Lastly, if we want to implement the fastest path in real time, we should get traffic information in real time to have a better estimate of the time it could takes to traverse a road. I don't know at the moment if there is any algorithm that works with approximate/dynamic graphs, but it's of course an interesting problem. However, since the code in Rust can run in a few seconds, we can simply consider a static graph every time there is a query with new traffic information, so we don't have to deal with dynamic updates."}]]}]}]]}]]}],"$undefined",[["$","link","0",{"rel":"stylesheet","href":"/heneos-blog/_next/static/css/5eacd01f773eed7f.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","$L5",null,{"children":["$L6","$L7",null]}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","CAKZMEiFGq6EK_rlH0Ad8",{"children":[["$","$L8",null,{"children":"$L9"}],null]}],["$","$La",null,{"children":"$Lb"}]]}],false]],"m":"$undefined","G":["$c","$undefined"],"s":false,"S":true}
9:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
6:null
7:null
b:[["$","title","0",{"children":"Graphs Algorithms in Maps | HeNeos blog"}],["$","meta","1",{"name":"description","content":"Implement graphs algorithms in maps using aws services"}]]
